// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.DBEntities.CriminalCase", b =>
                {
                    b.Property<Guid>("CriminalCaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CriminalDecisionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataRegistration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Region")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("CriminalCaseId");

                    b.HasIndex("CriminalDecisionId")
                        .IsUnique()
                        .HasFilter("[CriminalDecisionId] IS NOT NULL");

                    b.ToTable("CriminalCases");
                });

            modelBuilder.Entity("Data.DBEntities.CriminalDecision", b =>
                {
                    b.Property<Guid>("CriminalDecisionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Decision")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("CriminalDecisionId");

                    b.ToTable("CriminalDecisions");
                });

            modelBuilder.Entity("Data.DBEntities.Person", b =>
                {
                    b.Property<Guid>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CountCriminalRecord")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SurName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("Data.DBEntities.PersonInCriminalCase", b =>
                {
                    b.Property<Guid>("PersonInCriminalCaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<Guid>("CriminalCaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("PersonInCriminalCaseId");

                    b.HasIndex("CriminalCaseId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonInCriminalCases");
                });

            modelBuilder.Entity("Data.DBEntities.CriminalCase", b =>
                {
                    b.HasOne("Data.DBEntities.CriminalDecision", "CriminalDecision")
                        .WithOne("CriminalCase")
                        .HasForeignKey("Data.DBEntities.CriminalCase", "CriminalDecisionId");

                    b.Navigation("CriminalDecision");
                });

            modelBuilder.Entity("Data.DBEntities.PersonInCriminalCase", b =>
                {
                    b.HasOne("Data.DBEntities.CriminalCase", "CriminalCase")
                        .WithMany("PersonInCriminalCases")
                        .HasForeignKey("CriminalCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.DBEntities.Person", "Person")
                        .WithMany("PersonInCriminalCases")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CriminalCase");

                    b.Navigation("Person");
                });

            modelBuilder.Entity("Data.DBEntities.CriminalCase", b =>
                {
                    b.Navigation("PersonInCriminalCases");
                });

            modelBuilder.Entity("Data.DBEntities.CriminalDecision", b =>
                {
                    b.Navigation("CriminalCase");
                });

            modelBuilder.Entity("Data.DBEntities.Person", b =>
                {
                    b.Navigation("PersonInCriminalCases");
                });
#pragma warning restore 612, 618
        }
    }
}
